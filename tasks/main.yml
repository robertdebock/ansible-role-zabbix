---
# tasks file for zabbix
- name: test variables and environment
  assert:
    that:
      - ansible_distribution == "CentOS" or
        ansible_distribution == "Debian" or
        ansible_distribution == "Ubuntu"

- name: install zabbix repository (dnf/yum)
  package:
    name: "{{ zabbix_repository }}"
    state: "{{ zabbix_package_state }}"
  register: zabbix_install_zabbix_repository_dnf_yum
  retries: 3
  until: zabbix_install_zabbix_repository_dnf_yum is succeeded
  when:
    - ansible_pkg_mgr == "dnf" or ansible_pkg_mgr == "yum"

- name: install zabbix repository (apt)
  apt:
    deb: "{{ zabbix_repository }}"
  register: zabbix_zabbix_repository_apt
  retries: 3
  until: zabbix_zabbix_repository_apt is succeeded
  when:
    - ansible_pkg_mgr == "apt"
  notify:
    - update cache (apt)

- name: flush handlers
  meta: flush_handlers

- name: create /etc/zabbix
  file:
    path: /etc/zabbix
    state: directory

- name: install zabbix-agent software
  package:
    name: zabbix-agent
    state: "{{ zabbix_agent | default('present') }}"
  register: zabbix_install_zabbix_agent_software
  retries: 3
  until: zabbix_install_zabbix_agent_software is succeeded
  when:
    - zabbix_agent is defined

- name: configuring zabbix agent
  template:
    src: zabbix_agentd.conf.j2
    dest: /etc/zabbix/zabbix_agentd.conf
  notify:
    - restart zabbix agent
  when:
    - zabbix_agent == "present"

- name: start and enable zabbix agent
  service:
    name: "{{ zabbix_agent_service }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker" or zabbix_ignore_docker
    - zabbix_agent == "present"

- name: install zabbix-get software
  package:
    name: zabbix-get
    state: "{{ zabbix_get | default('absent') }}"
  register: zabbix_install_zabbix_get_software
  retries: 3
  until: zabbix_install_zabbix_get_software is succeeded
  when:
    - zabbix_get is defined

- name: install zabbix-java-gateway software
  package:
    name: zabbix-java-gateway
    state: "{{ zabbix_java_gateway | default('absent') }}"
  register: zabbix_install_zabix_java_gateway_software
  retries: 3
  until: zabbix_install_zabix_java_gateway_software is succeeded
  when:
    - zabbix_java_gateway is defined

- name: start and enable zabbix-java-gateway
  service:
    name: "{{ zabbix_java_gateway_service }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker" or zabbix_ignore_docker
    - zabbix_java_gateway == "present"

- name: install zabbix-server requirements
  package:
    name: "{{ zabbix_server_requirements }}"
    state: present
  register: zabbix_install_zabbix_server_requirements
  retries: 3
  until: zabbix_install_zabbix_server_requirements is succeeded
  when:
    - zabbix_server == "present"

- name: install zabbix-server software
  package:
    name: "zabbix-server-{{ zabbix_server_type | default('mysql') }}"
    state: "{{ zabbix_server | default('absent') }}"
  register: zabbix_install_zabbix_server_software
  retries: 3
  until: zabbix_install_zabbix_server_software is succeeded
  when:
    - zabbix_server is defined

- name: unarchive zabbix schema
  command: "{{ zabbix_unarchive_command }}"
  args:
    creates: "{{ zabbix_unarchive_creates }}"
  notify:
    - import zabbix schema
  when:
    - zabbix_server == "present"

- name: selinux settings for zabbix_server
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  with_items:
    - httpd_can_connect_zabbix
    - httpd_can_network_connect_db
    - zabbix_can_network
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
    - zabbix_server == "present"

- name: place selinux type enforcement
  copy:
    src: my-zabbixserver.te
    dest: /etc/zabbix/my-zabbixserver.te
  notify:
    - create selinux mod
    - create selinux pp
    - load selinux pp
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"
    - zabbix_server == "present"

- name: flush handlers
  meta: flush_handlers

- name: configure zabbix server
  template:
    src: zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
  notify:
    - restart zabbix server
  when:
    - zabbix_server == "present"

- name: start and enable zabbix-server
  service:
    name: "{{ zabbix_server_service }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker" or zabbix_ignore_docker
    - zabbix_server == "present"

- name: install zabbix-sender software
  package:
    name: zabbix-sender
    state: "{{ zabbix_sender | default('absent') }}"
  register: result
  retries: 3
  until: result is succeeded
  when:
    - zabbix_sender is defined

- name: install zabbix-proxy software
  package:
    name: "zabbix-proxy-{{ zabbix_proxy_type | default('mysql') }}"
    state: "{{ zabbix_proxy | default('absent') }}"
  register: result
  retries: 3
  until: result is succeeded
  when:
    - zabbix_proxy is defined

- name: start and enable zabbix-proxy
  service:
    name: "{{ zabbix_proxy_service }}"
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker" or zabbix_ignore_docker
    - zabbix_proxy == "present"

- name: install zabbix web software
  package:
    name: "{{ zabbix_web_server_package }}"
    state: "{{ zabbix_web | default('absent') }}"
  register: result
  retries: 3
  until: result is succeeded
  when:
    - zabbix_web is defined

- name: configure zabbix web
  template:
    src: zabbix.conf.php.j2
    dest: /etc/zabbix/web/zabbix.conf.php
  when:
    - zabbix_web == "present"
  notify:
    - restart httpd

- name: install zabbix-api requirements
  pip:
    name: zabbix-api
    state: "{{ zabbix_package_state }}"
  register: zabbix_install_zabbix_api_requirements
  retries: 3
  until: zabbix_install_zabbix_api_requirements is succeeded
  when:
    - zabbix_web_groups is defined or
      zabbix_web_hosts is defined

- name: add zabbix groups
  local_action:
    module: zabbix_group
    server_url: "{{ zabbix_web_server }}"
    login_user: "{{ zabbix_web_username }}"
    login_password: "{{ zabbix_web_password }}"
    state: present
    host_groups:
      - "{{ item.name }}"
  with_items:
    - "{{ zabbix_web_groups }}"
  when:
    - zabbix_web_groups is defined

- name: add zabbix hosts
  local_action:
    module: zabbix_host
    server_url: "{{ zabbix_web_server }}"
    login_user: "{{ zabbix_web_username }}"
    login_password: "{{ zabbix_web_password }}"
    host_name: "{{ item.name }}"
    visible_name: "{{ item.visible_name | default([omit]) }}"
    description: "{{ item.description | default([omit]) }}"
    host_groups:
      - "{{ item.groups }}"
    link_templates:
      - "{{ item.link_templates }}"
    status: enabled
    state: present
    inventory_mode: manual
    interfaces:
      - type: 1
        main: 1
        useip: 1
        ip: "{{ item.interface_ip }}"
        dns: "{{ item.interface_dns }} | default([omit]) }}"
        port: 10050
  when:
    - zabbix_web_groups is defined
